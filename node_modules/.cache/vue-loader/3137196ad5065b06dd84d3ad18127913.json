{"remainingRequest":"/home/tunt/Desktop/weather-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tunt/Desktop/weather-web/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tunt/Desktop/weather-web/src/App.vue","mtime":1604250693573},{"path":"/home/tunt/Desktop/weather-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tunt/Desktop/weather-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/tunt/Desktop/weather-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tunt/Desktop/weather-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBIZWxsb1dvcmxkIGZyb20gJy4vY29tcG9uZW50cy9IZWxsb1dvcmxkJzsKaW1wb3J0IHttZXNzYWdpbmdUb2tlbn0gZnJvbSAnQC9zZXJ2aWNlcy9tZXNhZ2UtZmlyZWJhc2UnCmltcG9ydCAqIGFzIGZpcmViYXNlU2Vydml2ZSBmcm9tICdAL3NlcnZpY2VzL2ZpcmViYXNlJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCgogIGNvbXBvbmVudHM6IHsKICAgIEhlbGxvV29ybGQsCiAgfSwKCiAgZGF0YTogKCkgPT4gKHsKICAgIC8vCiAgfSksCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuaW5pdEZpcmViYXNlTWVzc2FnaW5nKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRGaXJlYmFzZU1lc3NhZ2luZygpIHsKICAgICAgZmlyZWJhc2VTZXJ2aXZlLmluaXRGaXJlYmFzZSgpOwogICAgICBjb25zdCBtZXNzYWdpbmcgPSBtZXNzYWdpbmdUb2tlbigpCiAgICAgIG1lc3NhZ2luZy5nZXRUb2tlbigpLnRoZW4oKGN1cnJlbnRUb2tlbikgPT4gewogICAgICAgIGlmIChjdXJyZW50VG9rZW4pIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGN1cnJlbnRUb2tlbikKICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy8gU2hvdyBwZXJtaXNzaW9uIHJlcXVlc3QuCiAgICAgICAgICBjb25zb2xlLmxvZygnTm8gSW5zdGFuY2UgSUQgdG9rZW4gYXZhaWxhYmxlLiBSZXF1ZXN0IHBlcm1pc3Npb24gdG8gZ2VuZXJhdGUgb25lLicpOwogICAgICAgICAgLy8gU2hvdyBwZXJtaXNzaW9uIFVJLgogICAgICAgICAgLy8gdXBkYXRlVUlGb3JQdXNoUGVybWlzc2lvblJlcXVpcmVkKCk7CiAgICAgICAgICAvLyBzZXRUb2tlblNlbnRUb1NlcnZlcihmYWxzZSk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ0FuIGVycm9yIG9jY3VycmVkIHdoaWxlIHJldHJpZXZpbmcgdG9rZW4uICcsIGVycik7CiAgICAgICAgLy8gc2hvd1Rva2VuKCdFcnJvciByZXRyaWV2aW5nIEluc3RhbmNlIElEIHRva2VuLiAnLCBlcnIpOwogICAgICAgIC8vIHNldFRva2VuU2VudFRvU2VydmVyKGZhbHNlKTsKICAgICAgfSk7CiAgICAgIG1lc3NhZ2luZy5vbk1lc3NhZ2UoKHBheWxvYWQpID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhwYXlsb2FkKQogICAgICAgIGFsZXJ0KHBheWxvYWQpCiAgICAgIH0pOwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <v-app-bar\n      app\n      color=\"primary\"\n      dark\n    >\n      <div class=\"d-flex align-center\">\n        <v-img\n          alt=\"Vuetify Logo\"\n          class=\"shrink mr-2\"\n          contain\n          src=\"https://cdn.vuetifyjs.com/images/logos/vuetify-logo-dark.png\"\n          transition=\"scale-transition\"\n          width=\"40\"\n        />\n\n        <v-img\n          alt=\"Vuetify Name\"\n          class=\"shrink mt-1 hidden-sm-and-down\"\n          contain\n          min-width=\"100\"\n          src=\"https://cdn.vuetifyjs.com/images/logos/vuetify-name-dark.png\"\n          width=\"100\"\n        />\n      </div>\n\n      <v-spacer></v-spacer>\n\n      <v-btn\n        href=\"https://github.com/vuetifyjs/vuetify/releases/latest\"\n        target=\"_blank\"\n        text\n      >\n        <span class=\"mr-2\">Latest Release</span>\n        <v-icon>mdi-open-in-new</v-icon>\n      </v-btn>\n    </v-app-bar>\n\n    <v-main>\n      <HelloWorld/>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld';\nimport {messagingToken} from '@/services/mesage-firebase'\nimport * as firebaseServive from '@/services/firebase'\nexport default {\n  name: 'App',\n\n  components: {\n    HelloWorld,\n  },\n\n  data: () => ({\n    //\n  }),\n  created() {\n    this.initFirebaseMessaging()\n  },\n  methods: {\n    initFirebaseMessaging() {\n      firebaseServive.initFirebase();\n      const messaging = messagingToken()\n      messaging.getToken().then((currentToken) => {\n        if (currentToken) {\n          console.log(currentToken)\n        } else {\n          // Show permission request.\n          console.log('No Instance ID token available. Request permission to generate one.');\n          // Show permission UI.\n          // updateUIForPushPermissionRequired();\n          // setTokenSentToServer(false);\n        }\n      }).catch((err) => {\n        console.log('An error occurred while retrieving token. ', err);\n        // showToken('Error retrieving Instance ID token. ', err);\n        // setTokenSentToServer(false);\n      });\n      messaging.onMessage((payload) => {\n        console.log(payload)\n        alert(payload)\n      });\n    }\n  },\n};\n</script>\n"]}]}